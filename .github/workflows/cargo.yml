name: Build

on:
  push:
    branches:
    - master
  pull_request:
    branches:
      - master

jobs:

  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Cargo
      run: |
        echo CARGO_VERSION=$(cat Cargo.toml | grep -m 1 'version =' | cut -d '"' -f 2) >> $GITHUB_ENV
        cargo build --release
        mv target/release/cinyras cinyras-linux
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: cinyras-linux
        tag_name: v${{ env.CARGO_VERSION }}
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Cargo
      run: |
        echo CARGO_VERSION=$(cat Cargo.toml | grep -m 1 'version =' | cut -d "\"" -f 2) >> $GITHUB_ENV
        cargo build --release
        mv target/release/cinyras.exe cinyras.exe
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: cinyras.exe
        tag_name: v${{ env.CARGO_VERSION }}
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos:
    name: MacOS
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Cargo
      run: |
        echo CARGO_VERSION=$(cat Cargo.toml | grep -m 1 'version =' | cut -d '"' -f 2) >> $GITHUB_ENV
        cargo build --release
        mv target/release/cinyras cinyras-macos
    - name: Upload
      uses: softprops/action-gh-release@v1
      with:
        files: cinyras-macos
        tag_name: v${{ env.CARGO_VERSION }}
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ linux, windows, macos ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Version
      run: echo CARGO_VERSION=$(cat Cargo.toml | grep -m 1 'version =' | cut -d '"' -f 2) >> $GITHUB_ENV
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.CARGO_VERSION }}
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}